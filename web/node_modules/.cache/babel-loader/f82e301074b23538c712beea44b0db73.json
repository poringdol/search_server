{"ast":null,"code":"var _jsxFileName = \"/home/cddoma/go/src/GolandProjects/yandex-food/web/src/pages/GetByName.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PersonList from \"../components/PersonList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetByName = function () {\n  _s();\n\n  const [surname, setSurname] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [patronymic, setPatronymic] = useState(\"\");\n  const [persons, setPersons] = useState([]);\n\n  const findByName = () => {\n    fetch(\"http://localhost:9000/find_by_name?surname=\" + surname + \"&name=\" + name + \"&patronymic=\" + patronymic, {\n      method: 'GET',\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(response => response.json()).then(result => {\n      if (result.error.code === 404) {\n        setPersons([]);\n        return;\n      }\n\n      setPersons(result.addresses);\n    }); // .catch(e => {\n    //   console.log(e);\n    //   setData(e)});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input_text\",\n      type: \"text\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      value: surname,\n      onChange: e => setSurname(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input_text\",\n      type: \"text\",\n      placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input_text\",\n      type: \"text\",\n      placeholder: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n      value: patronymic,\n      onChange: e => setPatronymic(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"input_text\",\n      onClick: findByName,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GetByName, \"YtD57oMfG8XirrydycjfOYEcvfU=\");\n\n_c = GetByName;\nexport default GetByName;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetByName\");","map":{"version":3,"sources":["/home/cddoma/go/src/GolandProjects/yandex-food/web/src/pages/GetByName.jsx"],"names":["React","useState","PersonList","GetByName","surname","setSurname","name","setName","patronymic","setPatronymic","persons","setPersons","findByName","fetch","method","headers","then","response","json","result","error","code","addresses","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAAC,gDAA8CT,OAA9C,GAAsD,QAAtD,GAA+DE,IAA/D,GAAoE,cAApE,GAAmFE,UAApF,EAAgG;AACjGM,MAAAA,MAAM,EAAE,KADyF;AAEjGC,MAAAA,OAAO,EAAE;AACL,uCAA+B;AAD1B;AAFwF,KAAhG,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOGF,IAPH,CAOQG,MAAM,IAAI;AACZ,UAAIA,MAAM,CAACC,KAAP,CAAaC,IAAb,KAAsB,GAA1B,EAA+B;AAC7BV,QAAAA,UAAU,CAAC,EAAD,CAAV;AACE;AACH;;AACHA,MAAAA,UAAU,CAACQ,MAAM,CAACG,SAAR,CAAV;AACD,KAbH,EADyB,CAezB;AACA;AACA;AACH,GAlBG;;AAoBA,sBACE;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,WAAW,EAAC,oBAAtD;AAA4D,MAAA,KAAK,EAAElB,OAAnE;AAA4E,MAAA,QAAQ,EAAEmB,CAAC,IAAIlB,UAAU,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAArG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,WAAW,EAAC,4CAAtD;AAAgE,MAAA,KAAK,EAAEnB,IAAvE;AAA6E,MAAA,QAAQ,EAAEiB,CAAC,IAAIhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnG;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,WAAW,EAAC,kDAAtD;AAAiE,MAAA,KAAK,EAAEjB,UAAxE;AAAoF,MAAA,QAAQ,EAAEe,CAAC,IAAId,aAAa,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhH;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEb,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CApCD;;GAAMP,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport PersonList from \"../components/PersonList\";\n\nconst GetByName = function () {\n    const [surname, setSurname] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [patronymic, setPatronymic] = useState(\"\")\n    const [persons, setPersons] = useState([])\n\n    const findByName = () => {\n    fetch(\"http://localhost:9000/find_by_name?surname=\"+surname+\"&name=\"+name+\"&patronymic=\"+patronymic, {\n        method: 'GET',\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\"\n        }\n    })\n      .then(response => response.json())\n      .then(result => {\n          if (result.error.code === 404) {\n            setPersons([])\n              return\n          }\n        setPersons(result.addresses)\n      })\n    // .catch(e => {\n    //   console.log(e);\n    //   setData(e)});\n}\n\n    return (\n      <div>\n          <input className=\"input_text\" type=\"text\" placeholder=\"Имя\" value={surname} onChange={e => setSurname(e.target.value)} />\n          <input className=\"input_text\" type=\"text\" placeholder=\"Фамилия\" value={name} onChange={e => setName(e.target.value)} />\n          <input className=\"input_text\" type=\"text\" placeholder=\"Отчество\" value={patronymic} onChange={e => setPatronymic(e.target.value)} />\n          <button className=\"input_text\" onClick={findByName}>Отправить</button>\n\n          <PersonList persons={persons} />\n      </div>\n    )\n}\n\n\nexport default GetByName"]},"metadata":{},"sourceType":"module"}